{"version":3,"sources":["index.js"],"names":["InputData","props","onSubmit","type","value","onChange","ResultData","resultText","resultDataFlag","className","MainApp","state","inputValueDefault","handleChange","bind","handleSubmit","event","preventDefault","data_value","target","data_type","console","log","Number","this","setState","renderInputData","renderResultData","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oMAKA,SAASA,EAAUC,GAEjB,OACE,uBAAMC,SAAUD,EAAMC,SAAtB,UACE,oEAEE,uBAAOC,KAAK,SAASC,MAAOH,EAAMG,MAAOC,SAAUJ,EAAMI,cAE3D,uBAAOF,KAAK,SAASC,MAAM,8DAMjC,SAASE,EAAWL,GAElB,IAAIM,EAAa,mCAAYN,EAAMO,eAAiB,eAAO,IAAM,qIAEjE,OACE,qBAAKC,UAAU,cAAf,SAA8BF,I,IAK5BG,E,kDAGJ,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAEDU,MAAQ,CACXC,kBAAmB,GACnBJ,gBAAgB,GAIlB,EAAKK,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVH,E,gDAanB,SAAaE,GAEXA,EAAMC,mB,0BAGR,SAAaD,GAGX,IAAIE,EAAaF,EAAMG,OAAOf,MAC1BgB,SAAmBF,EAEvBG,QAAQC,IAAIJ,EAAYE,GAExBF,EAAaK,OAAOL,GAEpBG,QAAQC,IAAIJ,SAAmBA,GAG3BA,GAAc,GAChBM,KAAKC,SAAS,CAACjB,gBAAgB,IAE/BgB,KAAKC,SAAS,CAACjB,gBAAgB,IAIjCgB,KAAKC,SAAS,CAACb,kBAAmBM,M,6BAGpC,WACE,OACE,cAAClB,EAAD,CACEE,SAAUsB,KAAKT,aACfV,SAAUmB,KAAKX,aACfT,MAAOoB,KAAKb,MAAMC,sB,8BAKxB,WACE,OACE,cAACN,EAAD,CAAYE,eAAgBgB,KAAKb,MAAMH,mB,oBAI3C,WACE,OACE,gCACGgB,KAAKE,kBACLF,KAAKG,0B,GAhEQC,IAAMC,WAuE5BC,IAASC,OACP,cAACrB,EAAD,IACAsB,SAASC,eAAe,U","file":"static/js/main.c3b510fc.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction InputData(props) {\n  // Форма для ввода данных.\n  return (\n    <form onSubmit={props.onSubmit}>\n      <label>\n        Число:\n        <input type=\"number\" value={props.value} onChange={props.onChange} />\n      </label>\n      <input type=\"submit\" value=\"Отправить\" />\n    </form>\n  );\n}\n\n\nfunction ResultData(props) {\n  // Результат работы введенных данных\n  let resultText = \"Число \" + (props.resultDataFlag ? \"не\" : \"\") + \" входит в нужный диапазон\";\n\n  return (\n    <div className=\"result-data\">{resultText}</div>\n  );\n}\n\n\nclass MainApp extends React.Component {\n  // Основной компонент\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputValueDefault: 10,  // Значение поля по умолчанию\n      resultDataFlag: false,  // Результат получения диапазона числа\n    }\n\n    // Этот момент можно делать по другому.\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    // Предотвращает перезагрузку страницы по кнопке отправить.\n    event.preventDefault();\n  }\n\n  handleChange(event) {\n    // Основной обработчик логики\n  \n    let data_value = event.target.value;\n    let data_type = typeof data_value;\n\n    console.log(data_value, data_type);\n\n    data_value = Number(data_value);\n\n    console.log(data_value, typeof data_value);\n\n    // Проверяем число, от этого меняем флаг.\n    if (data_value >= 10) {\n      this.setState({resultDataFlag: true});\n    } else {\n      this.setState({resultDataFlag: false});\n    }\n\n    // Пробрасываем текущее значение в форму.\n    this.setState({inputValueDefault: data_value});\n  }\n\n  renderInputData() {\n    return (\n      <InputData\n        onSubmit={this.handleSubmit}\n        onChange={this.handleChange}\n        value={this.state.inputValueDefault}\n      />\n    );\n  }\n\n  renderResultData() {\n    return (\n      <ResultData resultDataFlag={this.state.resultDataFlag} />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderInputData()}\n        {this.renderResultData()}\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(\n  <MainApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}